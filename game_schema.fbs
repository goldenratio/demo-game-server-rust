namespace GameplayFBData;

struct PlayerControl {
  up: bool;
  down: bool;
  left: bool;
  right: bool;
}

struct Vec2 {
  x: float32;
  y: float32;
}

struct PlayerData {
  player_id: uint64;
  player_position: Vec2;
}

table PlayerMoved {
  player_controls: PlayerControl;
  player_position: Vec2;
}

table WeaponFired {
  angle: float32;
  power: float32;
}

union RequestMessages { PlayerMoved, WeaponFired }

table GameRequestEvent {
  msg: RequestMessages;
}

table RemotePeerJoined {
  player_data: PlayerData;
}

table RemotePeerLeft {
  player_id: uint64;
}

table RemotePeerPositionUpdate {
  player_data: PlayerData;
}

table GameWorldUpdate {
    player_data_list: [PlayerData];
}

union ResponseMessage { RemotePeerJoined, RemotePeerLeft, RemotePeerPositionUpdate, GameWorldUpdate }

table GameReponseEvent {
  msg: ResponseMessage;
}

root_type GameRequestEvent;
