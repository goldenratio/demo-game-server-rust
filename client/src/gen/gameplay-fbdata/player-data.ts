// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

import { Vec2 } from '../gameplay-fbdata/vec2';


export class PlayerData {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):PlayerData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

playerId():number {
  return this.bb!.readUint32(this.bb_pos);
}

playerPosition(obj?:Vec2):Vec2|null {
  return (obj || new Vec2()).__init(this.bb_pos + 4, this.bb!);
}

static sizeOf():number {
  return 12;
}

static createPlayerData(builder:flatbuffers.Builder, player_id: number, player_position_x: number, player_position_y: number):flatbuffers.Offset {
  builder.prep(4, 12);
  builder.prep(4, 8);
  builder.writeFloat32(player_position_y);
  builder.writeFloat32(player_position_x);
  builder.writeInt32(player_id);
  return builder.offset();
}

}
