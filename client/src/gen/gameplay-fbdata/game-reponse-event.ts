// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

import { ResponseMessage, unionToResponseMessage, unionListToResponseMessage } from '../gameplay-fbdata/response-message.js';


export class GameReponseEvent {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):GameReponseEvent {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsGameReponseEvent(bb:flatbuffers.ByteBuffer, obj?:GameReponseEvent):GameReponseEvent {
  return (obj || new GameReponseEvent()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsGameReponseEvent(bb:flatbuffers.ByteBuffer, obj?:GameReponseEvent):GameReponseEvent {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new GameReponseEvent()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

msgType():ResponseMessage {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : ResponseMessage.NONE;
}

msg<T extends flatbuffers.Table>(obj:any):any|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;
}

static startGameReponseEvent(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addMsgType(builder:flatbuffers.Builder, msgType:ResponseMessage) {
  builder.addFieldInt8(0, msgType, ResponseMessage.NONE);
}

static addMsg(builder:flatbuffers.Builder, msgOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, msgOffset, 0);
}

static endGameReponseEvent(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createGameReponseEvent(builder:flatbuffers.Builder, msgType:ResponseMessage, msgOffset:flatbuffers.Offset):flatbuffers.Offset {
  GameReponseEvent.startGameReponseEvent(builder);
  GameReponseEvent.addMsgType(builder, msgType);
  GameReponseEvent.addMsg(builder, msgOffset);
  return GameReponseEvent.endGameReponseEvent(builder);
}
}
